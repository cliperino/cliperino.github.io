{"version":3,"sources":["../../src/pages/profile/profile.module.ts","../../src/pages/profile/profile.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AAER;AACgC;AAgBxE;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAd7B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;gBACrC,yFAAe,CAAC,OAAO,EAAE;aAC1B;YACD,SAAS,EAAE,EACV;YACD,eAAe,EAAE;gBACf,6DAAW;aACZ;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACpB9B,UAAU;AACmE;AAEnB;AAEV;AAC8B;AAEd;AAEhE,YAAY;AAEZ,cAAc;AAOd;IAGE,qBACS,OAAsB,EACtB,SAA0B,EACzB,mBAAwC,EACxC,YAA0B;QAH3B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAiB;QACzB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAExC,8BAAQ,GAAR;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC;IACrE,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEhE,IAAI,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC;QAClE,IAAI,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;QAE9D,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,cAAc,IAAI,cAAc,KAAK,MAAM,IAAI,cAAc,KAAK,WAAW,CAAC,CAAC,CAAC;gBAClF,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAS,WAAwB;oBAC/E,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;wBAClD,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAChF,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,kCAAY,GAAZ;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,OAAO,EAAE,0CAA0C;YACnD,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAvCU,WAAW;QAJvB,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;mFAK+B;YACX,+FAAe;YACJ,mFAAmB;YAC1B,QAAY;OAPzB,WAAW,CAwCvB;IAAD,CAAC;AAAA;SAxCY,WAAW,e","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\nimport { ProfilePage } from './profile';\r\nimport { ComponentModule } from '../../app/components/component.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfilePage\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ProfilePage),\r\n    ComponentModule.forRoot()\r\n  ],\r\n  providers: [\r\n  ],\r\n  entryComponents: [\r\n    ProfilePage\r\n  ]\r\n})\r\nexport class ProfilePageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/profile/profile.module.ts","/* Core */\r\nimport { Component, ChangeDetectorRef, NgZone, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { IonicPage, NavController, NavOptions } from 'ionic-angular';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ToastController } from 'ionic-angular';\r\nimport { LocalStorageService } from '../../app/services/localStorage.service';\r\nimport { UserWrapper } from '../../app/models/user-wrapper';\r\nimport { UsersService } from '../../app/services/users.service';\r\n\r\n/* Models */\r\n\r\n/* Services */\r\n\r\n@IonicPage({\r\n  name: 'profile',\r\n  segment: 'profile'\r\n})\r\n@Component({\r\n  selector: 'page-profile',\r\n  templateUrl: 'profile.html'\r\n})\r\nexport class ProfilePage implements OnInit {\r\n  public twitchUsername: string;\r\n\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public toastCtrl: ToastController,\r\n    private localStorageService: LocalStorageService,\r\n    private usersService: UsersService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.twitchUsername = this.localStorageService.getTwitchUsermame();\r\n  }\r\n\r\n  onSave() {\r\n    let that = this;\r\n    this.localStorageService.setTwitchUsername(this.twitchUsername);\r\n\r\n    let twitchUsername = this.localStorageService.getTwitchUsermame();\r\n    let twitchUserId = this.localStorageService.getTwitchUserId();\r\n\r\n    if (!twitchUserId) {\r\n      if (twitchUsername && twitchUsername !== \"null\" && twitchUsername !== \"undefined\") {\r\n        this.usersService.getUsers(twitchUsername).then(function(userWrapper: UserWrapper) {\r\n          if (userWrapper.users && userWrapper.users.length) {\r\n            that.localStorageService.setTwitchUserId(userWrapper.users[0]._id.toString());\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.presentToast();\r\n  }\r\n\r\n  presentToast() {\r\n    const toast = this.toastCtrl.create({\r\n      message: 'Information has been saved successfully.',\r\n      duration: 3000\r\n    });\r\n    toast.present();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/profile/profile.ts"],"sourceRoot":""}